#!/bin/bash
function bubic_get_page()
{
  BASE_URL="$1"
  PAGES="$2"
  sleep 5
  if [ "${PAGES}" = "" ];
  then
    wget --no-check-certificate -w5 --random-wait -e robots=off -U 'mozilla' \
      --tries=${MAX_TRIES} --timeout=${MAX_TIMEOUT} "${BASE_URL}"
  else
    for page in ${PAGES};
    do
      wget --no-check-certificate -w6 --random-wait -e robots=off -U 'mozilla' \
        --tries=${MAX_TRIES} --timeout=${MAX_TIMEOUT} "${BASE_URL}${page}"
    done
  fi
}

function bubic_get_page_outfile()
{
  BASE_URL="$1"
  PAGES="$2"
  OUTFILE="$3"
  sleep 5
  if [ "${PAGES}" = "" ];
  then
    wget --no-check-certificate -w5 --random-wait -e robots=off -U 'Mozilla/5.0' --no-cookies\
      --tries=${MAX_TRIES} --timeout=${MAX_TIMEOUT} -O${3} "${BASE_URL}" 
  else
    for page in ${PAGES};
    do
      wget --no-check-certificate -w6 --random-wait -e robots=off -U 'Mozilla/5.0' --no-cookies\
        --tries=${MAX_TRIES} --timeout=${MAX_TIMEOUT} -O${3}-${page} "${BASE_URL}${page}"
    done
  fi
}

function bubic_get_page_cookies()
{
  BASE_URL="$1"
  PAGES="$2"
  COOKIE_FILE="$3"
  if [ "${PAGES}" = "" ];
  then
    wget --no-check-certificate --load-cookies=${COOKIE_FILE} -w5 --random-wait -e robots=off -U 'mozilla' \
      --tries=${MAX_TRIES} --timeout=${MAX_TIMEOUT} "${BASE_URL}"
  else
    for page in ${PAGES};
    do
      wget --no-check-certificate --load-cookies=${COOKIE_FILE} -w6 --random-wait -e robots=off -U 'mozilla' \
        --tries=${MAX_TRIES} --timeout=${MAX_TIMEOUT} "${BASE_URL}${page}"
    done
  fi
}

function bubic_get_pages_js()
{
  BASE_URL="$1"
  OUTFILE="$2"
  PAGES="$3"

  for page in ${PAGES};
  do
    bubic_get_page_js "${BASE_URL}${page}" "${OUTFILE}${page}"
  done
}

function bubic_get_page_js()
{
  BASE_URL="$1"
  OUTFILE_NO_PAGE="$2"   
  TMP_FILE=$(mktemp)

cat<<EOF>${TMP_FILE}
var url = "${BASE_URL}";
var page = require('webpage').create();

page.onLoadStarted = function () {
};

page.onLoadFinished = function (status) {
    console.log(page.content);
    phantom.exit();
};

page.open(url);
EOF

  phantomjs ${TMP_FILE} > ${OUTFILE_NO_PAGE}
  rm ${TMP_FILE}
}
